<?php

/**
 * @file
 * Contains migration_dashboard.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function migration_dashboard_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the migration_dashboard module.
    case 'help.page.migration_dashboard':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Migration Dashboard') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function migration_dashboard_theme($existing, $type, $theme, $path) {
  return [
    'migration_dashboard' => [
      // 'render element' => 'children',
      'variables' => ['react_div' => NULL]
    ],
  ];
}

/**
 * Implements hook_page_attachments().
 */
function migration_dashboard_page_attachments(array &$attachments) {
  $current_path = \Drupal::service('path.current')->getPath();
  if($current_path == '/admin/content/migration-dashboard') {
    $attachments['#attached']['library'][] = 'migration_dashboard/react_app';
  }
}

/**
 * Implements hook_page_attachments_alter().
 *
 * This is taken from the awesome setup by Sam Mortenson:
 * @link https://thinkshout.com/blog/2019/10/adding-webpack-to-a-traditional-drupal-theme/
 * 
 * 
 * Uncomment to merge node.js dev environment locally
 */
// function migration_dashboard_page_attachments_alter(array &$attachments) {
//   // Use the dev library if we're developing locally.
//   if (in_array('migration_dashboard/dashboard', $attachments['#attached']['library']) && file_exists(__DIR__ . '/js')) {
//     $index = array_search('migration_dashboard/dashboard', $attachments['#attached']['library']);
//     // $attachments['#attached']['library'][$index] = 'migration_dashboard/react_app_dev';
//   }
// }